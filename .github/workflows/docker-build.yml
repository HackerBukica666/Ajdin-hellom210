name: Build, Test, and Deploy Docker Image

on:
  push:
    branches: [main]

jobs:
  build:
    name: Build Docker Image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build Docker Image
        run: |
          docker build -t hellom210:test .

      - name: Save Docker Image as tar file
        run: |
          docker save -o hellom210.tar hellom210:test

      - name: Upload Docker Image Artifact
        uses: actions/upload-artifact@v3
        with:
          name: hellom210-image
          path: hellom210.tar

  test:
    name: Test Docker Image
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Download Docker Image Artifact
        uses: actions/download-artifact@v3
        with:
          name: hellom210-image

      - name: Load Docker Image
        run: |
          docker load -i hellom210.tar

      - name: Run Docker Container
        run: |
          docker run -d --name test-container -p 8080:80 hellom210:test
          sleep 5  # Gib dem Container etwas Zeit zum Starten

      - name: Install curl
        run: sudo apt-get update && sudo apt-get install -y curl

      - name: Test Webserver with curl
        run: curl -f http://localhost:8080 || (docker logs test-container && exit 1)

      - name: Stop and Remove Container
        run: docker stop test-container && docker rm test-container

  deploy:
    name: Deploy Docker Image
    runs-on: ubuntu-latest
    needs: test
    if: success()

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Download Docker Image Artifact
        uses: actions/download-artifact@v3
        with:
          name: hellom210-image

      - name: Load Docker Image
        run: |
          docker load -i hellom210.tar

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Push Docker Image to Docker Hub
        run: |
          IMAGE_NAME=taajaaj1/hellom210
          TAG=$(git rev-parse --short HEAD)

          docker tag hellom210:test $IMAGE_NAME:$TAG
          docker tag hellom210:test $IMAGE_NAME:latest

          docker push $IMAGE_NAME:$TAG
          docker push $IMAGE_NAME:latest
